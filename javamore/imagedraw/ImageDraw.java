import java.awt.*;
import java.applet.*;
// These classes are for Url's.
import java.net.*;

import java.awt.event.*; 

import java.util.Date;

/* 
<applet code="ImageDraw.class" width=1000 height=900>
  </applet> 
*/ 


public class ImageDraw extends Applet implements  MouseListener, MouseMotionListener{
	
	private Font fontFace18; private Font fontFace14; 
	boolean done;
	boolean stopFlag;
	double c1, c2,dx,dy;
	  double dX = 0.0, dY = 0.0; // previous coordinates 
	int mouseX = 400, mouseY = 400; 
	double showX, showY;
	 String msg = ""; 
	int ired, igreen, iblue,redAjust, greenAjust, blueAjust,limit;
	
	  boolean draw; 
  // Your image name;
     Image mygif;

 // The applet base URL
     URL base;

 // This object will allow you to control loading
     MediaTracker mt;

     public void init() 
     {
	       addMouseListener(this); 
	  addMouseMotionListener(this); 
	  fontFace18 = new Font("Arial", Font.PLAIN, 18);
	  fontFace14 = new Font("Arial", Font.PLAIN, 14);

  // initialize the MediaTracker
          mt = new MediaTracker(this);

  // The try-catch is necassary when the URL isn't valid
  // Ofcourse this one is valid, since it is generated by
  // Java itself.

         try {
   // getDocumentbase gets the applet path.
               base = getDocumentBase();
         }
         catch (Exception e) {}

  // Here we load the image.
  // Only Gif and JPG are allowed. Transparant gif also.
          mygif = getImage(base,"mandel.jpg");

  // tell the MediaTracker to kep an eye on this image, and give it ID 1;
          mt.addImage(mygif,1);

  // now tell the mediaTracker to stop the applet execution
  // (in this example don't paint) until the images are fully loaded.
  // must be in a try catch block.

         try {
               mt.waitForAll();
          }
          catch (InterruptedException  e) {}

  // when the applet gets here then the images is loaded.

     }

     
      
		
	public void stop(){  		
            
           }//end stop	
     
      // Handle mouse clicked. 
  public void mouseClicked(MouseEvent obj) { 
    mouseX = 810; 
    mouseY = 370;                                           
    msg = "Mouse clicked."; 
  // repaint(); 
  } 
 
  // Handle mouse entered. 
  public void mouseEntered(MouseEvent obj) { 
    mouseX = 810; 
    mouseY = 350; 
    msg = "Mouse entered."; 
   // repaint(); 
  } 
 
  // Handle mouse exited. 
  public void mouseExited(MouseEvent obj) { 
  
  } 
 
  // Handle button pressed. 
  public void mousePressed(MouseEvent obj) { 
    // save coordinates 
    mouseX = obj.getX(); 
    mouseY = obj.getY(); 
    msg = "*"; 
//insert scores into database
  showX = ((dx - 410)/200)-0.03 ;
    showY =  ((410- dy)/200)-0.3 ;
	repaint(); 
  } 
 
  // Handle button released. 
  public void mouseReleased(MouseEvent obj) { 
  } 
 
  // Handle mouse dragged. 
  public void mouseDragged(MouseEvent obj) { 
    
  } 
 
  // Handle mouse moved. 
  public void mouseMoved(MouseEvent obj) { 
    // show status 
    dx = (double)obj.getX();
    dy = (double)obj.getY();
      showX = ((dx - 410)/200) ;
    showY =  ((410- dy)/200) ;
    showStatus(showX + ", " + showY); 
   
  } 

     
     public void paint(Graphics g) 
     {
  // now we are going to draw the gif on the screen
  // (image name,x,y,observer);

          g.drawImage(mygif,10,10,this);
	  g.setColor(new Color(0,0,0));
		g.setFont(fontFace18);
			g.drawString("c: "+showX,810,290);
			g.drawString("ci: "+showY,810,310);
  // you can resize the image easily

         // g.drawImage(mygif,200,140,300,400,this);
 

     }

}


